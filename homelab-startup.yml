---
- name: Homelab Startup Sequence
  hosts: proxmox_host
  gather_facts: false
  vars:
    truenas_vm_id: 100
    truenas_ip: "192.168.50.100"
    lxc_containers: [130, 600]
    mount_timeout: 300
    
  tasks:
    - name: Start TrueNAS VM
      ansible.builtin.shell: |
        qm start {{ truenas_vm_id }}
      register: truenas_start
      failed_when: 
        - truenas_start.rc != 0
        - "'already running' not in truenas_start.stderr"
        - "'already running' not in truenas_start.stdout"
      
    - name: Display TrueNAS start result
      ansible.builtin.debug:
        msg: "TrueNAS start result: {{ truenas_start.stdout }} {{ truenas_start.stderr }}"

    - name: Wait for TrueNAS to be network accessible
      ansible.builtin.wait_for:
        host: "{{ truenas_ip }}"
        port: 80
        delay: 30
        timeout: 300
        msg: "TrueNAS web interface did not become accessible within 5 minutes"
      register: network_wait
      
    - name: Display network wait result
      ansible.builtin.debug:
        msg: "TrueNAS web interface accessible after {{ network_wait.elapsed }} seconds"

    - name: Wait for SMB service to be ready
      ansible.builtin.wait_for:
        host: "{{ truenas_ip }}"
        port: 445
        delay: 10
        timeout: 180
        msg: "SMB service did not start within 3 minutes"
      register: smb_wait
      
    - name: Display SMB wait result
      ansible.builtin.debug:
        msg: "SMB service ready after {{ smb_wait.elapsed }} seconds"

    - name: Additional wait for TrueNAS services to fully initialize
      ansible.builtin.debug:
        msg: "Waiting 30 seconds for TrueNAS services to fully initialize..."
        
    - name: TrueNAS initialization countdown
      ansible.builtin.shell: |
        total_wait=30
        echo "Starting ${total_wait}-second wait for TrueNAS initialization..."
        
        if [ $total_wait -gt 120 ]; then
          # For waits over 2 minutes, show every 60 seconds + final 10 seconds
          interval=60
          for i in $(seq $total_wait -$interval 1); do
            if [ $i -gt 10 ]; then
              echo "  $i seconds remaining..."
              sleep $interval
            else
              break
            fi
          done
          # Show final 10 seconds
          for i in {10..1}; do
            echo "  $i seconds remaining..."
            sleep 1
          done
        else
          # For shorter waits, show every 10 seconds + final 5 seconds  
          for i in $(seq $total_wait -1 1); do
            if [ $((i % 10)) -eq 0 ] || [ $i -le 5 ]; then
              echo "  $i seconds remaining..."
            fi
            sleep 1
          done
        fi
        
        echo "TrueNAS initialization wait complete!"

    - name: Test SMB connectivity
      ansible.builtin.shell: |
        timeout 10 nc -z {{ truenas_ip }} 445
      register: smb_test
      retries: 6
      delay: 10
      until: smb_test.rc == 0

    - name: Mount SMB shares
      ansible.builtin.shell: |
        mount -a -t cifs
      register: mount_result
      retries: 3
      delay: 10
      until: mount_result.rc == 0

    - name: Verify mounts are successful
      ansible.builtin.shell: |
        findmnt -t cifs
      register: mount_check
      failed_when: mount_check.rc != 0

    - name: Display mounted shares
      ansible.builtin.debug:
        msg: "Successfully mounted: {{ mount_check.stdout_lines }}"

    - name: Start LXC containers
      ansible.builtin.shell: |
        pct start {{ item }}
      register: lxc_start
      failed_when: 
        - lxc_start.rc != 0
        - "'already running' not in lxc_start.stderr"
        - "'already running' not in lxc_start.stdout"
      loop: "{{ lxc_containers }}"
      
    - name: Display LXC start results
      ansible.builtin.debug:
        msg: "Container {{ item.item }}: {{ item.stdout }} {{ item.stderr }}"
      loop: "{{ lxc_start.results }}"

    - name: Wait for LXC containers to be ready
      ansible.builtin.pause:
        seconds: 15

    - name: Verify LXC containers are running
      ansible.builtin.shell: |
        pct status {{ item }}
      register: lxc_status
      loop: "{{ lxc_containers }}"

    - name: Display LXC status
      ansible.builtin.debug:
        msg: "Container {{ item.item }}: {{ item.stdout }}"
      loop: "{{ lxc_status.results }}"

    - name: Final status summary
      ansible.builtin.debug:
        msg: |
          Homelab startup completed successfully:
          - TrueNAS VM {{ truenas_vm_id }} is running
          - SMB shares are mounted
          - LXC containers {{ lxc_containers | join(', ') }} are running